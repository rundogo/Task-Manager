<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title></title>
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="/styles.css" />
  </head>
  <body>
    <div class="website">
      <div class="navigation lilita-one-regular">
        <div>
          <div>
            <a href="/">CronosTask</a>
          </div>
        </div>
        <div>
          <a class="profile" href="/profile"><%=name%></a>
          <a class="logout" href="logout">Logout</a>
        </div>
      </div>
      <div class="main-container">
        <div class="aside"></div>
        <div class="main">
          <div class="add-task">
            <form action="" id="taskForm">
              <input type="text" name="title" placeholder=" + Add Task" />
            </form>
          </div>
          <div class="display-task">
            <div class="category">
              <h4>All Tasks</h4>
              <% tasks.forEach(function(task) { %>
              <div class="task">
                <div class="task-state">
                  <div><%= task.status %></div>
                  <div><%= task.dueDate %></div>
                </div>
                <div class="task-details">
                  <div><%= task.title %></div>
                </div>
                <div class="task-actions">
                  <div>
                    <form
                      action="/tasks/delete-task/<%= task._id %>"
                      method="POST"
                    >
                      <button type="submit">Delete</button>
                    </form>
                  </div>
                  <div>
                    <button
                      class="updateTaskDetails"
                      data-task-id="<%= task._id %>"
                    >
                      Update
                    </button>
                  </div>
                </div>
              </div>
              <% }); %>
            </div>
            <div></div>
          </div>
        </div>
      </div>
    </div>

    <script>
      //creating new task script
      //get the add task form values from html
      const addTaskForm = document.querySelector("#taskForm");
      // add event listener of form after using enters the task name
      addTaskForm.addEventListener("submit", async (e) => {
        //prevent the submit event from refreshing page
        e.preventDefault();

        //get the task fields from form
        //only name is entered for now
        const title = taskForm.title.value;
        const description = "";
        const status = "";
        const dueDate = "";

        //send the task data to server for task to be created in database

        const res = await fetch("tasks/create-task", {
          method: "POST",
          body: JSON.stringify({
            title,
            description,
            status,
            dueDate,
          }),
          headers: { "Content-Type": "application/json" },
        });
        //clear addTaskForm
        addTaskForm.title.value = "";
        //reload home page to load with new tasks
        window.location.reload();
      });
    </script>

    <script>
      //creating new task script
      //------IN PROGRESS--------
      document.addEventListener("DOMContentLoaded", () => {
        const updateTaskButtons =
          document.querySelectorAll(".updateTaskDetails");
        const tasks = document.querySelectorAll(".task");

        updateTaskButtons.forEach((button) => {
          button.addEventListener("click", async () => {
            const taskId = button.dataset.taskId;
            const url = `/tasks/get-task/${taskId}`;

            try {
              const response = await fetch(url, {
                method: "GET",
                // You can add headers, body, etc. if needed
              });

              if (!response.ok) {
                throw new Error("Network response was not ok.");
              }

              const responseData = await response.json(); // Assuming the response is JSON
              console.log(responseData); // Handle the response data here

              // Append task update form
              tasks.forEach((task) => {
                appendForm(responseData, task);
              });
            } catch (error) {
              console.error("Error fetching data:", error);
            }
          });
        });

        const appendForm = (responseData, task) => {
          const updateTaskForm = document.createElement("form");
          const updateTitle = document.createElement("input");
          updateTitle.value = responseData.title;

          updateTaskForm.appendChild(updateTitle);
          task.appendChild(updateTaskForm);
        };
      });

      /*
                        //updating existing task
                        //add event listener
                        updateTaskForm.addEventListener("submit", async (e) => {
                          e.preventDefault();

                          const taskId = updateTaskForm.taskId.value;
                          const title = updateTaskForm.updatedTitle.value;
                          const description = updateTaskForm.updatedDescription.value;
                          const status = updateTaskForm.updatedStatus.value;
                          const date = updateTaskForm.updatedDueDate.value;

                          console.log(taskId, title, description, status, date);

                          /*try {
                                  const response = await fetch(`/tasks/${taskId}`, {
                                    method: "PUT",
                                    headers: { "Content-Type": "application/json" },
                                    body: JSON.stringify({ title, description }),
                                  });

                                  if (response.ok) {
                                    alert("Task updated successfully!");
                                    // Optionally, update the UI to reflect the changes
                                  } else {
                                    const errorData = await response.json();
                                    console.error("Failed to update task:", errorData.message);
                                    alert("Failed to update task. Please try again.");
                                  }
                                } catch (error) {
                                  console.error("Error updating task:", error);
                                  alert("An unexpected error occurred.");
                                }
                        });*/
    </script>
  </body>
</html>
